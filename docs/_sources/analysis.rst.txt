Analysis module
===============
*PyGran* is an object-oriented library written primarily in Python for Discrete Element Method (DEM) simulation and analysis. The main purpose of *PyGran*  is to provide an easy and intuitive way for performing technical computing in DEM, enabling flexibility in how users interact with data from the onset of a simulation and until the post-processing stage. In addition to providing a brief tutorial on installing *PyGran*  for Unix systems, this manual focuses on 2 core modules (:numref:`fig_pygran`) in *PyGran* : ``simulation`` which provides ``engines`` for running DEM simulation and enables analysis of contact mechanical models, and ``analysis`` which contains methods and modules for processing DEM data. *PyGran*  is released under the GNU General Public License (`GPL v2.0 <https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html>`_), and its code base is available from `github <https://www.github.com/Andrew-AbiMansour/PyGran>`_.

.. _fig_pygran:
.. figure:: images/PyGran-design.png
    :width: 500px
    :align: center
    :height: 250px
    :alt: PyGran modules
    :figclass: align-center


    A diagram that shows the hierarchical structure of *PyGran* in terms of its core modules and submodules that can be imported from a Python input script.

Brief introduction to DEM
-------------------------
he Discrete Element Method (DEM) is the application of Newtonian mechanics to a set of interacting particles that are usually assumed to be spherical in shape. For a spherical particle :math:`i` that undergoes translation and rotation and of moment of inertia :math:`I_i` and volume :math:`V_i`, its dynamical equations are

.. math::
   \rho V_i a_i &= \sum_j F_{ij} + F_{b_i},

   I_i \alpha_i &= \sum_j T_{ij}.

The true mass density of the particles is :math:`\rho`, :math:`F_{ij}` is the surface contact force between particle :math:`i` and its neighbors (summed over :math:`j`), :math:`F_{b_i}` is a body force acting on particle :math:`i` (such as gravity, i.e. :math:`F_{b_i} = \rho V_i g`), and :math:`T_{ij}` is the torque between particle :math:`i` and its neighbors that is limited by the static friction coefficient :math:`\mu`.

DEM simulation involves the numerical solution of Eqs. (1) by decomposing the space the particles occupy into a grid of connected nearest-neighbor lists that enable fast and efficient computation of inter-particle surface forces. For every discrete timestep, all forces acting on each particle are computed, and the particle positions are updated based on the discretized form of Eqs. (1).

.. _fig_dem:
.. figure:: images/DEM.png
    :width: 300px
    :align: center
    :height: 150px
    :alt: DEM cycle
    :figclass: align-center

    A flowchart that shows the different stages involved in completing a single DEM timestep.